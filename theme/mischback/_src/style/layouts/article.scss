/* This is the styling of the text-based content, provided as article.
 *
 * The corresponding template is ``theme/mischback/article.html``.
 */

.main-article {
  display: flex;
  flex-flow: row wrap;
  align-content: space-around;
  align-items: flex-start;
  justify-content: space-evenly;

  /* FIXME: Verify these values! The vertical gap (first value) is actually
   *        made up. The horizontal gap (second value) covers the offset of
   *        the icons of ``<aside>`` boxes.
   */
  gap: 10px 25px;

  article {
    @include content-box-visual;

    flex: 1 1 44em;
    max-width: 44em;
    margin-bottom: 1rem;
    font-size: $text-content-font-size;

    /* stylelint-disable max-nesting-depth */
    > div {
      position: relative;
    }

    /* Sphinx's generation process provides a clearly semantic markup, which is
     * strictly hierarchic. The ``<article>`` will contain multiple nested
     * ``<section>`` containers (derived from the hierarchy of headlines in the
     * ``rST`` sources).
     *
     * This rule sets the outer dimension of the actual text body, using
     * ``max-width``.
     *
     * FIXME: Aim for ~80 characters per line; this is highly dependent on the
     *        font-face!
     */
    > section {
      max-width: 40em;
      margin-right: 2em;
      margin-left: 2em;
      padding: 0;
      padding-bottom: $text-content-vertical-rhythm * 2;
      font-size: 1em;
    }
    /* stylelint-enable max-nesting-depth */
  }

  aside {
    flex: 1 1 20rem;

    /* NOTE: The ``15px`` are based on the (horizontal) margins of the
     *       ``content-box-shadow`` mixin in ``abstracts/content-box.scss``!
     *
     *       This adjustment has to be made because the boxes are placed
     *       inside of the ``<aside>`` container.
     */
    max-width: calc(44em + 15px);
  }
}

/* Fix inline code samples.
 *
 * TODO: Beside the font (Hack), this does not stand out in any way, which is
 *       a little too integrated.
 */
article p code {
  font-size: 0.9em;
}
